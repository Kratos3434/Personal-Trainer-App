// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["rhel-openssl-1.0.x", "native"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model UserAccount {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  password  String
  profile   Profile?
  otp OTP?
  verified  Boolean   @default(false)
  provider String?
  createdAt DateTime  @default(now())
  updatedAt DateTime?
}

model OTP {
  id Int @id @default(autoincrement())
  otp String @unique
  userId Int @unique
  userAccount UserAccount @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime?
}

model Profile {
  id                Int             @id @default(autoincrement())
  userId            Int             @unique
  userAccount       UserAccount     @relation(fields: [userId], references: [id])
  firstName         String
  lastName          String
  dob               DateTime
  gender            String
  bodyMeasurement BodyMeasurement?
  createdAt         DateTime        @default(now())
  updatedAt         DateTime?
}

model BodyMeasurement {
  id      Int      @id @default(autoincrement())
  weight  Float
  date    DateTime @default(now())
  chest   Int
  abdomen Int
  thigh   Int
  bypassMeasurementFlag Boolean
  bodyFatPercent        Float
  muscleMass            Float
  profileId Int @unique
  profile Profile @relation(fields: [profileId], references: [id])
}

model equipmentStatus {
  id                  Int    @id @default(autoincrement())
  equipmentStatusDesc String
  equipmentWeight     Int
}
